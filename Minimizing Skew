
# Minimum Skew Problem: Find a position in a genome minimizing the skew
# What is the DNA string genome? GATACACTTCCCGAGTAGGTACTG
# Output: {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: -1, 7: -1, 8: -1, 9: -2, 10: -3, 11: -4, 12: -3, 13: -3, 14: -2, 15: -2, 16: -2, 17: -1, 18: 0, 19: 0, 20: 0, 21: -1, 22: -1, 23: 0}
[11]
sequence = input("What is the DNA string genome? ")

DNA = str(sequence).upper()
DNAdict = {}

# Count the skew through the sequence

def findcount(DNA):
	count = 0
	for n, i in enumerate(DNA):
		if i == "C":
			count -= 1
			DNAdict[n] = count
		elif i == "G":
			count +=1
			DNAdict[n] = count
		else:
			DNAdict[n] = count

findcount(DNA)
print(DNAdict)

# Find minimum positions

skew = min(DNAdict.values())

answer = []
for s in DNAdict:
	if DNAdict[s] == skew:
		answer.append(s)

print(answer)
